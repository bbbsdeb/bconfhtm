#!/usr/bin/perl
#  bconf2html.pl  Copyright (c) 2006-2013 Robert James Clay 
#  Used to create a BBBS Conference Statistics HTML page for a BBBS system.
#  All Rights Reserved. This is free software;  you can redistribute
#  it and/or modify it under the same terms as Perl itself.

use warnings;
use strict;

our $VERSION = '0.3';

use File::Slurp;
use HTML::Template;
use Getopt::Std;
use Carp;

our ($opt_t, $opt_o, $opt_s, $opt_f, $opt_l, $opt_x, $opt_h);
my ($STATFILE, $TEMPLATE, $WORKDIR, $HTMLFILE, $expires, $expiry, $logfile, $DEBUG);

use Readonly;
Readonly my $DAYOFSECS => 86_400;
Readonly my $NINETEENTH => 1900;

getopts('t:o:f:s:l:xh');

parse_command_line();

# set BBBS base directory
my $BBBSDIR = '/opt/bbbs';

#get current time as timestamp
my $timestamp = time();
# set page expiration time
# 86,400 seconds, equals 1 day
$expiry = $DAYOFSECS;

$expires = gmtime($timestamp + $expiry);

# get local time as string
my ($sec, $min, $hour, $day, $mon, $year, $wday, $yday, $isdst) = localtime($timestamp);

# open & read the file containing the result of the command 'bbbs bconf', which is put in $bconfstats
my $bconfstats = read_file("$STATFILE");

# open the html template
my $template = HTML::Template->new(filename => "$TEMPLATE");

# fill in the template parameters
$template->param(PAGEEXPIRES => $expires);

$template->param(BCONFSTATS => $bconfstats);

$template->param(DAY => $day);
$template->param(MON => ($mon + 1));
$template->param(YEAR => ($year + $NINETEENTH));
$template->param(HOURS => $hour);
$template->param(MINS => $min);

# create new version of conference stats html page
my $newpage="$WORKDIR/$HTMLFILE";
# open filehandle FH for write
open my $fh, q{>}, $newpage || croak $!;

# use the function to send the new contents to the new version of the file
$template->output(print_to => *$fh);

# close the filehandle
close($fh) or croak "Unable to close: $!";

exit 0;

################################################
## Subroutines
##
############################################
# parse_command_line
############################################
sub parse_command_line {

    if ($opt_h) {
        display_help();
        exit 1;
    }

    if ($opt_x) {
        # set debug flag
        $DEBUG = $opt_x;
        undef $opt_x;
        print "\nDebug flag is set ...\n";
    } else {
       $DEBUG = 0;
    }

    if ($opt_t) {
        $TEMPLATE=$opt_t;  # this needs to be the filename & path
        undef $opt_t;
    } else {
        # default template file
        $TEMPLATE='/opt/bbbs/work/bcnfhtml.tpl';
    }

    if ($opt_o) {
        # this needs to be the filename & path 
        $WORKDIR=$opt_o;
        undef $opt_o;
    } else {
       # default working directory
        $WORKDIR='/opt/bbbs/work';
    }

    if ($opt_s) {
        # this needs to be the filename & path
        $STATFILE=$opt_s;
        undef $opt_s;
    } else {
        # default stats file
        $STATFILE='/opt/bbbs/work/bconf.txt';
    }

    if ($opt_f) {
        # this needs to be the filename & path
        $HTMLFILE=$opt_f;
        undef $opt_f;
    } else {
        # default stats file
        $HTMLFILE='/opt/bbbs/work/bcnfstat.htm';
    }

    if ($opt_l) {
        # this needs to be the filename & path for a logfile 
        $logfile=$opt_l;
        undef $opt_l;
    } else {
        # default log file
        $logfile='/opt/bbbs/logs/wwwadm.log';
    }

    return();

}
############################################
# Help
############################################
sub display_help {
    print "\nUsage:  bconf2html.pl [-t Template] [-o HTMLDir] [-s StatsFile] / \n";
    print "                       [-f HTMLFileName] [-l LogFile] [-x] [-h]\n\n";
    print "   -t   HTML page template file;  defaults to /opt/bbbs/work/bcnfhtml.tpl. \n";
    print "   -o   Directory where the resulting HTML file should be put.\n";
    print "        Defaults to /opt/bbbs/work.\n";
    print "   -s   Path & filename for Stats file generated by the 'BBBS BCONF' \n";
    print "        command. Defaults to /opt/bbbs/work/bconf.txt.\n";
    print "   -f   Filename for HTML file being created. \n";
    print "   -l   Path & filename of logfile.  Defaults to /opt/bbbs/logs/wwwadm.log.\n";
    print "   -x   Debug Mode\n";
    print "   -h   This Help\n";
    print "\n";

    return();
}

