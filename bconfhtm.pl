#!/usr/bin/perl
#  bconfhtm.pl v0.2  Copyright (c) 2006-2010 Robert James Clay 
#  Used to creat a BBBS Conference Statistics HTML page for a BBBS system.
#  All Rights Reserved. This is free software;  you can redistribute
#  it and/or modify it under the same terms as Perl itself.

use warnings;
use strict;

my $Version = "0.2";

use File::Slurp;
use HTML::Template;
use Getopt::Std;

our ($opt_t $opt_o $opt_s $opt_f $opt_l $opt_x $opt_h);
my ($STATFILE, $TEMPLATE, $WORKDIR, $HTMLFILE, $expires, $expiry, $logfile, $DEBUG);


getopts('t:o:f:s:l:xh');

&ParseCommandLine();

# set BBBS base directory
my $BBBSDIR = "/opt/bbbs";

#get current time as timestamp
my $timestamp = time();
# set page expiration time
$expiry = 86400;	# 86400 seconds, equals 1 day

$expires = gmtime($timestamp + $expiry);

# get local time as string
my ($sec, $min, $hour, $day, $mon, $year, $wday, $yday, $isdst) = localtime($timestamp);

# open & read the file containing the result of the command 'bbbs bconf', which is put in $bconfstats
my $bconfstats = read_file("$STATFILE");

# open the html template
my $template = HTML::Template->new(filename => "$TEMPLATE");

# fill in the template parameters
$template->param(PAGEEXPIRES => $expires);

$template->param(BCONFSTATS => $bconfstats);

$template->param(DAY => $day);
$template->param(MON => ($mon + 1));
$template->param(YEAR => ($year + 1900));
$template->param(HOURS => $hour);
$template->param(MINS => $min);

# create new version of conference stats html page
my $newpage="$WORKDIR/$HTMLFILE";
# open filehandle FH for write
open(FH, "> $newpage") || die $!;

# use the function to send the new contents to the new version of the file
$template->output(print_to => *FH);    

# close the filehandle
close(FH);

exit(0);

################################################
## Subroutines
##
############################################
# ParseCommandLine
############################################
sub ParseCommandLine {

    if ($opt_h) {
        &DisplayHelp();
	exit(1);
    }

    if ($opt_x) {
	$DEBUG = $opt_x;	# set debug flag
	undef $opt_x;
	print "\nDebug flag is set ...\n";
    } else {
	$DEBUG = 0;
    }
	
    if ($opt_t) {
	$TEMPLATE=$opt_t;  # this needs to be the filename & path
	undef $opt_t;
    } else {
	$TEMPLATE="/opt/bbbs/work/bcnfhtml.tpl";	# default template file
    }

    if ($opt_o) {
	$WORKDIR=$opt_o;  # this needs to be the filename & path 
	undef $opt_o;
    } else {
	$WORKDIR="/opt/bbbs/work";	# default working dir
    }

    if ($opt_s) {
	$STATFILE=$opt_s;  # this needs to be the filename & path
	undef $opt_s;
    } else {
	$STATFILE="/opt/bbbs/work/bconf.txt";	# default stats file
    }

    if ($opt_f) {
	$HTMLFILE=$opt_f;  # this needs to be the filename & path
	undef $opt_f;
    } else {
	$HTMLFILE="/opt/bbbs/work/bcnfstat.htm";	# default stats file
    }

    if ($opt_l) {
	$logfile=$opt_l;  # this needs to be the filename & path for a logfile 
	undef $opt_l;
    } else {
	my $logfile="/opt/bbbs/logs/wwwadm.log";	# default log file
    }
    
}
############################################
# Help
############################################
sub DisplayHelp {
    print "\nUsage:  bconfhtm.pl [-t Template] [-o HTMLDir] [-s StatsFile] / \n";
    print "                       [-f HTMLFileName] [-l LogFile] [-x] [-h]\n\n";
    print "   -t   HTML page template file;  defaults to /opt/bbbs/work/bcnfhtml.tpl. \n";
    print "   -o   Directory where the resulting HTML file should be put.\n";
    print "        Defaults to /opt/bbbs/work.\n";
    print "   -s   Path & filename for Stats file generated by the 'BBBS BCONF' \n";
    print "        command. Defaults to /opt/bbbs/work/bconf.txt.\n";
    print "   -f   Filename for HTML file being created. \n";
    print "   -l   Path & filename of logfile.  Defaults to /opt/bbbs/logs/wwwadm.log.\n";
    print "   -x   Debug Mode\n";
    print "   -h   This Help\n";
    print "\n";
}

